<div class="navbar"> 
    <div class="nav-icons">

              <a
                class="top-icon-social"
                aria-label="visit github page"
                href="https://github.com/Thebuilderekes"
                target="_blank"
              >
                <svg
                  xmlnsXlink="http://www.w3.org/2000/svg"
                  width="30"
                  height="30"
                  viewBox="0 0 24 24"
                >
                  {' '}
                  <title>GitHub</title>{' '}
                  <path
                    d="M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 6c-3.313 0-6 2.686-6 6 0 2.651 1.719 4.9 4.104 5.693.3.056.396-.13.396-.289v-1.117c-1.669.363-2.017-.707-2.017-.707-.272-.693-.666-.878-.666-.878-.544-.373.041-.365.041-.365.603.042.92.619.92.619.535.917 1.403.652 1.746.499.054-.388.209-.652.381-.802-1.333-.152-2.733-.667-2.733-2.965 0-.655.234-1.19.618-1.61-.062-.153-.268-.764.058-1.59 0 0 .504-.161 1.65.615.479-.133.992-.199 1.502-.202.51.002 1.023.069 1.503.202 1.146-.776 1.648-.615 1.648-.615.327.826.121 1.437.06 1.588.385.42.617.955.617 1.61 0 2.305-1.404 2.812-2.74 2.96.216.186.412.551.412 1.111v1.646c0 .16.096.347.4.288 2.383-.793 4.1-3.041 4.1-5.691 0-3.314-2.687-6-6-6z"
                    fill="#fff"
                  />
                </svg>
              </a>

              <a
                aria-label="visit linkedin page"
                href="https://www.linkedin.com/in/ekeopre-beredugo-204580111/"
              >
                <svg
                  fill="#ffffff"
                  height="30px"
                  width="30px"
                  version="1.1"
                  id="Layer_1"
                  xmlns="http://www.w3.org/2000/svg"
                  xmlnsXlink="http://www.w3.org/1999/xlink"
                  viewBox="0 0 310 310"
                  xmlSpace="preserve"
                  stroke="#ffffff"
                >
                  <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
                  <g
                    id="SVGRepo_tracerCarrier"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  ></g>
                  <g id="SVGRepo_iconCarrier">
                    {' '}
                    <g id="XMLID_801_">
                      {' '}
                      <title id="linkedin">Linkedin</title>{' '}
                      <path
                        id="XMLID_802_"
                        d="M72.16,99.73H9.927c-2.762,0-5,2.239-5,5v199.928c0,2.762,2.238,5,5,5H72.16c2.762,0,5-2.238,5-5V104.73 C77.16,101.969,74.922,99.73,72.16,99.73z"
                      ></path>{' '}
                      <path
                        id="XMLID_803_"
                        d="M41.066,0.341C18.422,0.341,0,18.743,0,41.362C0,63.991,18.422,82.4,41.066,82.4 c22.626,0,41.033-18.41,41.033-41.038C82.1,18.743,63.692,0.341,41.066,0.341z"
                      ></path>{' '}
                      <path
                        id="XMLID_804_"
                        d="M230.454,94.761c-24.995,0-43.472,10.745-54.679,22.954V104.73c0-2.761-2.238-5-5-5h-59.599 c-2.762,0-5,2.239-5,5v199.928c0,2.762,2.238,5,5,5h62.097c2.762,0,5-2.238,5-5v-98.918c0-33.333,9.054-46.319,32.29-46.319 c25.306,0,27.317,20.818,27.317,48.034v97.204c0,2.762,2.238,5,5,5H305c2.762,0,5-2.238,5-5V194.995 C310,145.43,300.549,94.761,230.454,94.761z"
                      ></path>{' '}
                    </g>{' '}
                  </g>
                </svg>
              </a>
    </div>

    <!-- Navigation toggle button -->
<button id="nav-toggle" aria-expanded="false" aria-controls="nav-menu" aria-label="Toggle navigation">
  <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <line x1="5" y1="7" x2="19" y2="7" stroke="#fff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <line x1="5" y1="12" x2="19" y2="12" stroke="#fff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <line x1="5" y1="17" x2="19" y2="17" stroke="#fff"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>
</button>
    <!-- Full-screen navigation menu -->
    <nav id="nav-menu" class="nav-menu" aria-label="main" aria-hidden="true">
    
      <button id="nav-close" aria-label="Close navigation">

<svg fill="#fff" height="30px" width="30px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
	 viewBox="0 0 371.23 371.23" xml:space="preserve">
<polygon points="371.23,21.213 350.018,0 185.615,164.402 21.213,0 0,21.213 164.402,185.615 0,350.018 21.213,371.23 
	185.615,206.828 350.018,371.23 371.23,350.018 206.828,185.615 "/>
</svg>
    </button>

      <ul role="list">
        <li><a aria-label="hompage" class="nav-link" href="/">Home</a></li>
        <li><a aria-label="about page" class="nav-link" href="/about">About</a></li>
        <li><a aria-label="contact form" class="nav-link contact-link" href="#form">Contact</a></li>
      </ul>
    </nav>
    <div>

<style>

/* Navbar styling */
.navbar {
  display: flex;
  align-items: center;
  padding: 0.9rem 1rem;
  background-color: var(--light-green-color);
  color: #fff;
  position: relative;
  z-index: 2;
}


   .navbar.dark {
		 background: var(--dark-green-color);
   }
   
/* Icons styling */
.nav-icons {
  display: flex;
  gap: 0.5rem;
}

.nav-icon {
  width: 30px;
  height: 30px;
}

/* Navigation toggle button */
#nav-toggle {
  margin-left: auto;
  background: none;
  border: none;
  color: #fff;
  font-size: 1.5rem;
  cursor: pointer;
}

/* Full-screen overlay navigation */
.nav-menu {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: var(--light-green-color);
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  transform: translateY(-100%);
  transition: transform 0.3s ease;
}

   /*nav menu dark mode*/


   .nav-menu.dark {
		 background: var(--dark-green-color);
   }

@media (min-width: 768px) {

   .nav-menu.dark {
		 background: transparent;
   }
}
/* Navigation menu list */
.nav-menu ul {
  list-style-type: "";
  padding: 0;
  text-align: center;
}

.nav-menu li {
  margin: 1rem 0;
}

.nav-menu .nav-link {
  color: #fff;
  text-decoration: none;
 font-size: var(--fs-medium);
}

  .nav-menu .nav-link[aria-current="page"] {
    color: var(--yellow);
    border-bottom: 2px solid var(--border-color);
  }

  .nav-menu .nav-link:hover {
  color: var(--light-grey-color);
  }

@media (min-width: 768px) {
  .nav-menu .nav-link {
  font-size: var(--fs-medium);
}
}

@media (max-width: 500px) {
  .nav-menu li {
    margin: 2rem 0;
}

.nav-menu[aria-hidden="true"] {
   display: none;
}
}

.nav-menu[aria-hidden="false"] {
  transform: translateY(0);
}



/* Close button in the overlay menu */
#nav-close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: none;
  border: none;
  color: #fff;
  font-size: 2rem;
  cursor: pointer;
}


  @media (min-width: 768px) {
    #nav-close {
      display:none;
  }
  }

@media (min-width: 768px) {
  #nav-toggle {
    display: none;
  }

  .nav-menu {
    position: static;
    background-color: transparent;
    flex-direction: row;
    height: auto;
    transform: translateY(0);
  }

  .nav-menu ul {
    display: flex;
    gap: 1rem;
  }

}

.hidden{
  display: none;
 }

</style>


<script>
// JavaScript for opening and closing the mobile menu
document.addEventListener("DOMContentLoaded", () => {
  const navToggle = document.getElementById("nav-toggle");
  const navMenu = document.getElementById("nav-menu");
  const navClose = document.getElementById("nav-close");
  const navLinks = navMenu.querySelectorAll("a"); 
  const contactLink = document.querySelector(".contact-link")
  const toggleMenu = (isExpanded) => {

    navToggle.setAttribute("aria-expanded", !isExpanded);

    navMenu.setAttribute("aria-hidden", isExpanded);
  };

  // Open menu on toggle button click
  navToggle.addEventListener("click", () => {

    const isExpanded = navToggle.getAttribute("aria-expanded") === "true";

    toggleMenu(isExpanded);
  });

  // Close menu on close button click
  navClose.addEventListener("click", () => {

    toggleMenu(true);

  });

  //Hide Navigation on click of navigation link
contactLink.addEventListener('click', () => {
  // Add the hidden class to hide the menu
  navMenu.classList.add('hidden');
  

  // Remove the hidden class after 1 second (1000 ms)
  setTimeout(() => {
    navMenu.classList.remove('hidden');
  }, 1000);

  // Call toggleMenu immediately
  toggleMenu(true);
});

  // set aria-current="page" on link of active page
  function setAriaCurrent() {
    navLinks.forEach(link => {

      // Set aria-current="page" if the link matches the current URL
      if (link.href === window.location.href){
        link.setAttribute("aria-current", "page");
      } else {
        link.removeAttribute("aria-current");
      }
    });
  };

  // Run aria-current update on page load
  setAriaCurrent();

  // Run aria-current update on hash change (for single-page apps)
//window.addEventListener("hashchange", setAriaCurrent);


});


</script>
