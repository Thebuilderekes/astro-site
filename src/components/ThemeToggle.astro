---
---

<style>
  #ThemeSwitcher {
    border: 0;
    background: none;
    display: flex;
    justify-content: flex-end;
    position: fixed;
    bottom: 12%;
    right: 2%;
    z-index: 700;
  }
  .sun {
    fill: rgb(224, 185, 10);
  }
  .moon {
    fill: transparent;
  }

  :global(.dark) .sun {
    fill: transparent;
  }
  :global(.dark) .moon {
    fill: rgb(224, 185, 10);
  }
</style>

<button id="ThemeSwitcher">
  <svg
    width="50px"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
  >
    <path
      class="sun"
      fill="rgb(255, 255, 255)"
      d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"
    ></path>
    <path
      class="moon"
      fill="rgb(255, 255, 255)"
      d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"
    ></path>
  </svg>
</button>

<script>
  const element = document.documentElement;
  const mainHeading = document.querySelector('h1');
  const subHeading = document.querySelector('h2');
  const paragraphText = document.querySelector('p');
  const portfolioSection = document.querySelector('.portfolio');
  const toggleButton = document.getElementById('ThemeSwitcher');
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: light)').matches) {
      return 'light';
    }
    return 'dark';
  })();

  if (theme === 'light') {
    document.documentElement.classList.add('dark');
    mainHeading.classList.add('dark');
    subHeading.classList.add('dark');
    paragraphText.classList.add('dark');
    portfolioSection.classList.add('dark');
  } else {
    document.documentElement.classList.remove('dark');
    mainHeading.classList.remove('dark');
    subHeading.classList.remove('dark');
    paragraphText.classList.remove('dark');
    portfolioSection.classList.remove('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const toggleItems = [
      element,
      mainHeading,
      subHeading,
      paragraphText,
      portfolioSection,
    ];
    toggleItems.map((item) => {
      item.classList.toggle('dark');
    });

    const isDark = element.classList.contains('dark');
    const isMainHeadingDark = mainHeading.classList.contains('dark');
    const isSubHeadingDark = subHeading.classList.contains('dark');
    const isParagraphDark = paragraphText.classList.contains('dark');
    const isPortfolioSectionDark = portfolioSection.classList.contains('dark');
    localStorage.setItem(
      'theme',
      isDark &&
        isMainHeadingDark &&
        isSubHeadingDark &&
        isParagraphDark &&
        isPortfolioSectionDark
        ? 'dark'
        : 'light'
    );
  };

  toggleButton.addEventListener('click', handleToggleClick);
</script>
